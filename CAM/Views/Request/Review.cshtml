@model Request

@{
    ViewBag.Title = "Review Request";
}



<h2 class="page-header">Review Request</h2>

<div class="form-horizontal">
    
    <div class="control-group">
        
        <legend>
            Request Details
            @if(Model.Pending)
            {
                <span class="label label-info">Pending</span>
                <div class="pull-right">
                <a href="@Url.Action("Edit", new {id=@Model.Id})" class="btn btn-primary"><i class="icon-pencil"></i>Edit</a>
                </div>
            }
            else
            {
                if (Model.Approved.Value)
                {
                    <span class="label label-success">Approved</span>
                }
                else
                {
                    <span class="label label-important">Denied</span>
                }
            }
        </legend>

        <fieldset>
            <div class="span4">
                <div class="control-group">
                    <label class="control-label">Name</label>
                    <div class="controls form-text">@string.Format("{0} {1}", Model.FirstName, Model.LastName)</div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(model => model.Email, new {@class="control-label"})
                    <div class="controls form-text">
                        @Model.Email
                    </div>
                </div>  
                <div class="control-group">
                    @Html.LabelFor(model => model.ContactPhone, new {@class="control-label"})
                    <div class="controls form-text">
                        @Model.ContactPhone
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(model => model.OfficePhone, new {@class="control-label"})
                    <div class="controls form-text">
                        @Model.OfficePhone
                    </div>
                </div>
            </div>    
            <div class="span4">
                <div class="control-group">
                    @Html.LabelFor(model => model.UnitName, new {@class="control-label"})
                    <div class="controls form-text">@Model.UnitName </div>
                </div>  
                <div class="control-group">
                    @Html.LabelFor(model => model.NeedsEmail, new {@class="control-label"})
                    <div class="controls form-text">
                        @(Model.NeedsEmail ? "Yes" : "No")
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(model => model.OfficeLocation, new {@class="control-label"})
                    <div class="controls form-text">
                        @string.Format("{0} {1}", Model.Room, Model.OfficeLocation)
                    </div>
                </div>   
                <div class="control-group">
                    <label class="control-label">Employment Dates</label>
                    <div class="controls form-text">
                        @if(Model.End.HasValue)
                        {
                            <text>
                                @string.Format("{0}-{1}", Model.Start.ToString("d"), Model.End.Value.ToString("d"))
                            </text>
                        }
                        else
                        {
                            <text>
                                @Model.Start.ToString("d")
                            </text>
                        }
                    </div>
                </div>   

            </div>    
            <div class="span4">
                <div class="control-group">
                    @Html.LabelFor(model => model.EmployeeType, new {@class="control-label"})
                    <div class="controls form-text">
                        @Model.EmployeeType
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(model => model.HireType, new {@class="control-label"})
                    <div class="controls form-text">
                        @Model.HireType
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(model => model.CreatedBy, new {@class="control-label"})
                    <div class="controls form-text">
                        @Model.CreatedBy
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(model => model.CreatedDate, new {@class="control-label"})
                    <div class="controls form-text">
                        @Model.CreatedDate
                    </div>
                </div>      
            </div>    
            <div class="span12">
                <div class="control-group">
                    @Html.LabelFor(model => model.OrganizationalUnit, new {@class="control-label"})
                    <div class="controls form-text">
                        @(Model.OrganizationalUnit != null ? Model.OrganizationalUnit.Name : string.Empty)
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelFor(model => model.HomeDirectory, new {@class="control-label"})
                    <div class="controls">
		                @(string.Format("{0} {1}", Model.HomeDrive, Model.HomeDirectory))
                    </div>
                </div>
            </div>
        </fieldset>
    </div>
    <div class="control-group">
        <div class="span6">
            <legend>Security Groups</legend>
        
            <ul class="unstyled">
                @foreach(var sg in Model.SecurityGroups)
                {
                    <li>@sg.Name</li>
                }
            </ul>

        </div>
        <div class="span6">
        
            <legend>Software</legend>
        
            <ul class="unstyled">
                @foreach(var sg in Model.Software)
                {
                    <li>@sg.Name 
                        @if(sg.WebApplication)
                        {
                            <text>(Web Application)</text>
                        }
                    </li>
                }
            </ul>

        </div>
    </div>
    @if(Model.Pending)
    {
        <div class="form-actions">
            @using(Html.BeginForm("Review", "Request", new {Approved=true, Id=Model.Id}, FormMethod.Post, new {style="display:inline-block;"}))
            {
                @Html.AntiForgeryToken()
                <input type="submit" value="Approve" class="btn btn-success" />    
            }
            @using(Html.BeginForm("Review", "Request", new {Approved=false, Id=Model.Id}, FormMethod.Post, new {style="display:inline-block;"}))
            {
                @Html.AntiForgeryToken()
                <input type="submit" value="Deny" class="btn btn-danger"/>
            }
            @Html.ActionLink("Cancel", "Index", new {}, new {@class="btn"})
        </div>    
    }
    

</div>

@section AdditionalScripts
{
}