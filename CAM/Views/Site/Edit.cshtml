@model Site

@{
    ViewBag.Title = "Edit Site";
}

<h2 class="page-header">Edit Site</h2>

@using(Html.BeginForm("Edit", "Site", FormMethod.Post, new {@class="form-horizontal"}))
{
    @Html.AntiForgeryToken()
    
    <div class="control-group">
        <fieldset>
            <div class="control-group">
                @Html.LabelFor(model => model.Id, new {@class="control-label"})
                <div class="controls">
                    @Html.EditorFor(model => model.Id, string.Empty, "SiteValues.Id")
                    @Html.ValidationMessageFor(model => model.Id)
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(model => model.Name, new {@class="control-label"})
                <div class="controls">
                    @Html.EditorFor(model => model.Name, string.Empty, "SiteValues.Name")
                    @Html.ValidationMessageFor(model => model.Name)
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(model => model.ActiveDirectoryServer, new {@class="control-label"})
                <div class="controls">
                    @Html.EditorFor(model => model.ActiveDirectoryServer, string.Empty, "SiteValues.ActiveDirectoryServer")
                    @Html.ValidationMessageFor(model => model.ActiveDirectoryServer)
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(model => model.SecurityGroupOu, new {@class="control-label"})
                <div class="controls">
                    @foreach(var ou in Model.GetSecurityOus())
                    {
                        <div class="ou-container">
                            <input type="text" name="securityou" value="@ou" class="span8"/>
                            <div class="btn btn-danger remove-ou">
                                <i class="icon-minus"></i>
                                Remove
                            </div>
                        </div>
                    }
                    <div class="ou-container">
                        <input type="text" name="securityou" class="span8"/>
                        <div class="btn btn-danger remove-ou">
                            <i class="icon-minus"></i>
                            Remove
                        </div>
                    </div>
                    <div class="add-ou btn btn-success" data-name="securityou">
                        <i class="icon-plus"></i>
                        Add
                    </div>
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(model => model.UserOu, new { @class = "control-label" })
                <div class="controls">
                    @foreach(var ou in Model.GetUserOus())
                    {
                        <div class="ou-container">
                            <input type="text" name="userou" value="@ou" class="span8"/>
                            <div class="btn btn-danger remove-ou">
                                <i class="icon-minus"></i>
                                Remove
                            </div>
                        </div>
                    }
                    <div class="ou-container">
                        <input type="text" name="userou" class="span8"/>
                        <div class="btn btn-danger remove-ou">
                            <i class="icon-minus"></i>
                            Remove
                        </div>
                    </div>
                    <div class="add-ou btn btn-success" data-name="userou">
                        <i class="icon-plus"></i>
                        Add
                    </div>
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(model => model.Username, new { @class = "control-label" })
                <div class="controls">
                    @Html.EditorFor(model => model.Username, string.Empty, "SiteValues.Username")
                    @Html.ValidationMessageFor(model => model.Username)
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(model => model.Password, new { @class = "control-label" })
                <div class="controls">
                    @Html.EditorFor(model => model.Password, string.Empty, "SiteValues.Password")
                    @Html.ValidationMessageFor(model => model.Password)
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(model => model.LyncUri, new {@class="control-label"})
                <div class="controls">
                    @Html.EditorFor(model => model.LyncUri, string.Empty, "SiteValues.LyncUri")
                    @Html.ValidationMessageFor(model => model.LyncUri)
                </div>
            </div>
        </fieldset>
    </div>
    
    <div class="form-actions">
        <input type="submit" value="Save" class="btn btn-primary"/>
        @Html.ActionLink("Cancel", "Settings", new {}, new {@class="btn"})
    </div>
}

@section scripts
{
    <script type="text/javascript" src="@Url.Content("~/Scripts/jquery.tmpl.min.js")"></script>

    <script type="text/javascript">
        $(function() {
            $(".add-ou").click(function(e) {
                var $ou = $("#ouTemplate").tmpl([{Name: $(this).data("name")}]).insertBefore($(this));
                $ou.show('normal');
                e.preventDefault();
            });

            $("form").on('click', '.remove-ou', function (event) {
                $(this).closest('.ou-container').hide('normal', function () { $(this).remove();});
            });
        });
    </script>
    
    <script id="ouTemplate" type="text/x-jquery-tmpl">
        <div class="ou-container" style="display:none;">
            <input type="text" name="${Name}" class="span8"/>
            <div class="btn btn-danger remove-ou">
                <i class="icon-minus"></i>
                Remove
            </div>
        </div>
    </script>
    
    <style type="text/css">
        .ou-container { margin: .5em 0;}
    </style>
}